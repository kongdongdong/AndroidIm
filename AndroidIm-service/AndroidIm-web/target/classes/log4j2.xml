<?xml version="1.0" encoding="UTF-8"?>
<!--
    status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
-->
<Configuration status="WARN" monitorInterval="600">

    <Properties>
        <!-- 配置日志文件输出目录 -->
        <Property name="LOG_HOME">/Users/kdd/Documents/Java/IDEAWorkSpace/AndroidIm/AndroidIm-web/src/main/resources/log</Property>
    </Properties>

    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
        	<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <!-- <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/> -->
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>  
        </Console>
        
        <!-- 设置日志格式并配置日志压缩格式(eg: info-2017-02-12-1.log.gz) -->  
        <RollingFile name="Infolog" fileName="${LOG_HOME}/info.log"  
                     filePattern="${LOG_HOME}/info-%d{yyyy-MM-dd}-%i.log">  
            <Filters>  
                <ThresholdFilter level="INFO"/>  
               <!--  <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/> --> 
            </Filters>  
            <!--  
                %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间  
                %p : 日志输出格式  
                %c : logger的名称  
                %m : 日志内容，即 logger.info("message")  
                %n : 换行符  
                %C : Java类名  
                %L : 日志输出所在行数  
                %M : 日志输出所在方法名  
                hostName : 本地机器名  
                hostAddress : 本地ip地址  
             -->  
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>  
            <Policies>  
                <TimeBasedTriggeringPolicy/>  
                <SizeBasedTriggeringPolicy size="20 MB"/>  
            </Policies>  
        </RollingFile>
        
        <RollingFile name="Errorlog" fileName="${LOG_HOME}/error.log"  
                     filePattern="${LOG_HOME}/error-%d{yyyy-MM-dd}-%i.log">  
            <ThresholdFilter level="ERROR"/>  
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>  
            <Policies>  
                <TimeBasedTriggeringPolicy/>  
                <SizeBasedTriggeringPolicy size="20 MB"/>  
            </Policies>  
        </RollingFile> 
        
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="Debuglog" fileName="${LOG_HOME}/debug.log" append="false">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>  
        </File>
    </Appenders>

    <Loggers>
        <!-- 配置日志的根节点 -->
        <root level="info">
        	<!-- <appender-ref ref="Console"/> -->
        	<appender-ref ref="Infolog"/>
            <appender-ref ref="Errorlog"/>
        </root>
        
        <!-- <logger name="com.bupt.flowpackage" level="info" includeLocation="true" additivity="false">
        	<appender-ref ref="Infolog"/>
        </logger> -->
        
        <!-- <logger name="com.bupt.test.Helloxx" level="debug" includeLocation="true" additivity="false">
        	<appender-ref ref="Debuglog"/>
        </logger> -->

        <!-- 第三方日志系统 -->
        <logger name="org.springframework.core" level="info"/>
        <logger name="org.springframework.beans" level="info"/>
        <logger name="org.springframework.context" level="info"/>
        <logger name="org.springframework.web" level="info"/>
        <logger name="org.jboss.netty" level="warn"/>
        <logger name="org.apache.http" level="warn"/>
    </Loggers>

</Configuration>