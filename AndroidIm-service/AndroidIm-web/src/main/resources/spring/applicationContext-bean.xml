<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    <!-- MINA                                                            -->
    <!-- =============================================================== -->


    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.net.SocketAddress"
                       value="org.apache.mina.integration.beans.InetSocketAddressEditor">
                </entry>
            </map>
        </property>
    </bean>
    <bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"
          init-method="bind" destroy-method="unbind">
        <!--端口号-->
        <property name="defaultLocalAddress" value=":5222" />
        <!--绑定自己实现的handler-->
        <property name="handler" ref="serverHandler" />
        <!--声明过滤器的集合-->
        <property name="filterChainBuilder" ref="filterChainBuilder" />
        <property name="reuseAddress" value="true" />
    </bean>

    <bean id="filterChainBuilder"
          class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
        <property name="filters">
            <map>
                <!--mina自带的线程池filter-->
                <entry key="executor" value-ref="executorFilter" />
                <entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" />
                <!--自己实现的编解码器filter-->
                <entry key="codecFilter" value-ref="codecFilter" />
                <!--日志的filter-->
                <entry key="loggingFilter" value-ref="loggingFilter" />
                <!--心跳filter-->
                <entry key="keepAliveFilter" value-ref="keepAliveFilter" />
            </map>
        </property>
    </bean>
    <!-- executorFilter多线程处理 -->
    <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter" />
    <bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
        <constructor-arg value="remoteAddress" />
    </bean>

    <!--日志-->
    <bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />

    <!--编解码-->
    <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
        <constructor-arg>
            <!--构造函数的参数传入自己实现的对象-->
            <bean class="com.kdd.androidim.codec.MyCodeFactory"></bean>
        </constructor-arg>
    </bean>

    <!--心跳检测filter-->
    <bean id="keepAliveFilter" class="org.apache.mina.filter.keepalive.KeepAliveFilter">
        <!--构造函数的第一个参数传入自己实现的工厂-->
        <constructor-arg>
            <bean class="com.kdd.androidim.xmpp.MyKeepAliveMessageFactory"></bean>
        </constructor-arg>
        <!--第二个参数需要的是IdleStatus对象，value值设置为读写空闲-->
        <constructor-arg type = "org.apache.mina.core.session.IdleStatus" value="BOTH_IDLE" >
        </constructor-arg>
        <!--心跳频率，不设置则默认60s  -->
        <property name="requestInterval" value="30" />
        <!--心跳超时时间，不设置则默认30s    -->
        <property name="requestTimeout" value="60" />
        <!--不设置默认false-->
        <property name="forwardEvent" value="true" />
    </bean>

    <!--自己实现的handler-->
    <bean id="serverHandler" class="com.kdd.androidim.handler.XmppIoHandler" />

    <!-- 设置客户端连接超时时间根据实际情况自行设置 -->
    <bean id="getSessionConfig" factory-bean="ioAcceptor" factory-method="getSessionConfig">
        <property name="readerIdleTime" value="30"></property>
    </bean>
</beans>